// FIRST POSSIBILITY HOW TO POSITION THINGS: LINE NUMBERS
// .container {
//     width: 1200px;
//     margin: 50px auto;
//     display: grid;
//     height: 400px;
//     // create rows
//     // grid-template-rows: 150px 150px;
//     grid-template-rows: repeat(2, 1fr);
//     // create columns
//     // grid-template-columns: 150px 150px 150px;
//     // grid-template-columns: repeat(3, 150px);
//     // first two 150, third 300px
//     // grid-template-columns: repeat(2, 150px) 300px;
//     // 3 columns with equal width, 1 fractional unit, or %
//     grid-template-columns: repeat(3, 1fr);
//     // grid-template-columns: 50% 150px 150px;
//     // grid-template-columns: 1fr 2fr 1fr;
//     // grid-cap: 30px;
//     grid-row-gap: 50px;
//     grid-column-gap: 50px;

//     .item {
//         padding: 30px;
//         font-size: 40px;
//         color: white;

//         &-1 {
//             background-color: green;
//             grid-row-start: 2;
//             grid-row-end: 3;
//             grid-column-start: 2;
//             grid-column-end: 3;
//         }

//         &-2 {
//             background-color: blue;
//             grid-row: 1 / 3;
//             grid-column: 3 / 4;
//         }

//         &-3 {
//             background-color: red;
//             // grid-column: 1 / span 3;
//             // -1 reps the end
//             grid-column: 1 / -1;
//         }

//         &-4 {
//             background-color: orangered;
//             grid-row: 1 / -1;
//         }

//         &-5 {
//             background-color: yellow;
//             grid-row: 2 / 3;
//             grid-column: 3 / 4;
//         }

//         &-6 {
//             background-color: black;
//             grid-row: 1 / 2;
//             grid-column: 2 / 3;
//         }
//     }
// }


// ----------- CHALLENGE ------------

.container1 {
    width: 90vw;
    margin: 100px auto;
    display: grid;
    grid-row-gap: 50px;
    grid-column-gap: 50px;
    height: 800px;
    grid-template-rows: repeat(8, 1fr);
    grid-template-columns: repeat(7, 1fr);

    // HOW HE DID IT
    //     grid-template-rows: 100px 200px 400px 100px;
    //     grid-template-columns: repeat(3, 1fr) 200px;
    //     grid-gap: 50px;
    // select all direct childer: & > * {}
    .item1 {
        padding: 30px;
        font-size: 40px;
        color: white;

        &--1 {
            background-color: green;
            grid-column: 1 / -1;
            grid-row: 1 / 1;
        }

        &--2 {
            background-color: blue;
            grid-column: 1 / 3;
            grid-row: 2 / 4;
        }

        &--3 {
            background-color: red;
            // grid-column: 1 / span 3;
            // -1 reps the end
            grid-column: 3 / 5;
            grid-row: 2 / 4;
        }

        &--4 {
            background-color: orangered;
            grid-column: 5 / 7;
            grid-row: 2 / 4;
        }

        &--5 {
            background-color: yellow;
            grid-row: 2 / 8;
            grid-column: 7 / 8;
        }

        &--6 {
            background-color: black;
            grid-row: 4 / 8;
            grid-column: 1 / 7;
        }

        &--7 {
            background-color: teal;
            grid-column: 1 / -1;
            grid-row: 8 / 9;
        }
    }
}

// ----------- SECOND; GIVE ROW START AND END NAMES --------------

// .container1 {
//     display: grid;
//     grid-template-rows: [header-start] 100px [eader-end box-start] 200px [BOX-end MAIN-START] 100px[main-end];
//     grid-template-columns: repeat(3, [col-start] 1fr [col-end]) 200px [grid-end];
//     // select all direct childer: & > * {}

//     .item1 {
//         &--1 {
//             grid-row: box-start / main-end;
//             grid-column: col-start 1 / col-end 1;
//         }
//     }
// }

// ----------- third; SOME VOODOO / DOESNT WORK --------------

// .container1 {
//     grid-template-rows: 100px 200px 400px 100px;
//     grid-template-columns: repeat(3, 1fr) 200px;
//     grid-gap: 50px;

//     .item1 {
//         grid-template-areas: "head head head head"
//             "box-1 box-2 box-3 side"
//             "main main main side"
//             "foot foot foot foot";
//     }
// }


// ----------- FOURTH; AUTOMATICALLY GIVES WIDTH AND HEIGHT HEN YOU DONT KNOW HOW MAY CELSS YOULL HAVE --------------

// .container1 {
//     width: 90vw;
//     margin: 100px auto;
//     display: grid;

// THIS IS MADE FOR 2X2, BUT HTML HAS MORE ROWS
// EXPLICIT
//     grid-template-rows: repeat(2, 150px;
//     grid-template-columns: repeat(2, 1fr);
//     grid-gap: 50px;

// THE MAGIC, gives the first 2 rows height, but gives other automated ones 100px
// IMPLICIT
// grid-auto-rows: 100px;
// grid-auto-flow; row/columns; DENSE - FILLS IN TH GAPS
// grid-auto-colums: .5fr;

// || x-axis : align-items: center; // strech is the default, fills inthe whole are, now with center the height as lost, but it stays in the center
// -- y-axis : justify-items: center; //
//     .item1 {
//         padding: 30px;
//         font-size: 40px;
//         color: white;
//         background-color: orangered;

//         grid-template-areas: "head head head head"
//             "box-1 box-2 box-3 side"
//             "main main main side"
//             "foot foot foot foot";
//     }
// }

// -------- min-content, max-content, minmax() --------

.CONTAINER {
    width: 80%;
    display: grid;
    grid-template-rows: min-content;
    grid-template-rows: repeat(2, minmax(150px, min-content));

    grid-template-columns: max-content 1fr min-content; // when div has text, makes it as wide as the text
    grid-template-columns: minmax(200px, 300px) repeat(3, 1fr); // first column doesnt change sie when resizing
    grid-template-columns: minmax(200px, 50%) repeat(3, 1fr);
}

// -------- auto-fill and auto-fit --------
.CONTAINER {
    width: 80%;
    display: grid;

    grid-template-columns: auto-fill, 100px; // at 100px makes themas many as much it has space
    grid-template-columns: auto-fit, 100px; //makes only as much of div as ou have
    grid-template-columns: auto-fit, minmax(100px, 1fr); // fillls ectra space, every div is min 100px or as much as it has space

    // to mkae it also responsie, when rows dont have space and do wrap, you write:
    grid-auto-rows: 150px;
}